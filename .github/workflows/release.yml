name: release

on:
  push:
    branches:
      - release

jobs:
  release:
    runs-on: macos-11
    timeout-minutes: 90

    steps:
    - uses: actions/checkout@v2

    - name: setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18

    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: aarch64-apple-darwin

    - uses: Swatinem/rust-cache@v1
      with:
        working-directory: ./src-tauri
        target-dir: ./src-tauri/target

    - name: Setup macos build tooling
      run: |
        sudo xcode-select -s /Applications/Xcode_12.4.app/Contents/Developer/
        # Set SDK environment variables
        echo "SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path)" >> $GITHUB_ENV
        echo "MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version)" >> $GITHUB_ENV

    - name: download Vosk model
      run: |
        VOSK_MODEL_VERSION=0.22
        curl -LO https://alphacephei.com/vosk/models/vosk-model-ja-$VOSK_MODEL_VERSION.zip
        mv vosk-model-ja-$VOSK_MODEL_VERSION.zip ./src-tauri/resources
        unzip ./src-tauri/resources/vosk-model-ja-$VOSK_MODEL_VERSION.zip -d ./src-tauri/resources
        rm ./src-tauri/resources/vosk-model-ja-$VOSK_MODEL_VERSION.zip

    - name: install app dependencies
      run: yarn install --frozen-lockfile

    - uses: tauri-apps/tauri-action@dev
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
        APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
        APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      with:
        tagName: lycoris-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
        releaseName: "Lycoris v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: false
        args: --target universal-apple-darwin

use std::str::FromStr;

pub enum ModelTypeVosk {
    SmallJapanese,
    Japanese,
    SmallEnglish,
    English,
    SmallChinese,
    Chinese,
    SmallKorean,
    SmallFrench,
    French,
    SmallGerman,
    German,
    SmallRussian,
    Russian,
    SmallSpanish,
    Spanish,
    SmallPortuguese,
    SmallTurkish,
    SmallVietnamese,
    Vietnamese,
    SmallItalian,
    Italian,
    SmallDutch,
    SmallCatalan,
    SmallUkrainian,
    Ukrainian,
    SmallSwedish,
    SmallHindi,
    Hindi,
    SmallCzech,
    SmallPolish,
}

impl ModelTypeVosk {
    pub fn as_str(&self) -> &'static str {
        match self {
            ModelTypeVosk::SmallJapanese => "small-ja-0.22",
            ModelTypeVosk::Japanese => "ja-0.22",
            ModelTypeVosk::SmallEnglish => "small-en-us-0.15",
            ModelTypeVosk::English => "en-us-0.22",
            ModelTypeVosk::SmallChinese => "small-cn-0.22",
            ModelTypeVosk::Chinese => "cn-0.22",
            ModelTypeVosk::SmallKorean => "small-ko-0.22",
            ModelTypeVosk::SmallFrench => "small-fr-0.22",
            ModelTypeVosk::French => "fr-0.22",
            ModelTypeVosk::SmallGerman => "small-de-0.15",
            ModelTypeVosk::German => "de-0.21",
            ModelTypeVosk::SmallRussian => "small-ru-0.22",
            ModelTypeVosk::Russian => "ru-0.42",
            ModelTypeVosk::SmallSpanish => "small-es-0.42",
            ModelTypeVosk::Spanish => "es-0.42",
            ModelTypeVosk::SmallPortuguese => "small-pt-0.3",
            ModelTypeVosk::SmallTurkish => "small-tr-0.3",
            ModelTypeVosk::SmallVietnamese => "small-vn-0.4",
            ModelTypeVosk::Vietnamese => "vn-0.4",
            ModelTypeVosk::SmallItalian => "small-it-0.22",
            ModelTypeVosk::Italian => "it-0.22",
            ModelTypeVosk::SmallDutch => "small-nl-0.22",
            ModelTypeVosk::SmallCatalan => "small-ca-0.4",
            ModelTypeVosk::SmallUkrainian => "small-uk-v3-small",
            ModelTypeVosk::Ukrainian => "uk-v3",
            ModelTypeVosk::SmallSwedish => "small-sv-rhasspy-0.15",
            ModelTypeVosk::SmallHindi => "small-hi-0.22",
            ModelTypeVosk::Hindi => "hi-0.22",
            ModelTypeVosk::SmallCzech => "small-cs-0.4-rhasspy",
            ModelTypeVosk::SmallPolish => "small-pl-0.22",
        }
    }
}

impl FromStr for ModelTypeVosk {
    type Err = ();

    fn from_str(input: &str) -> Result<ModelTypeVosk, Self::Err> {
        match input {
            "small-ja-0.22" => Ok(ModelTypeVosk::SmallJapanese),
            "ja-0.22" => Ok(ModelTypeVosk::Japanese),
            "small-en-us-0.15" => Ok(ModelTypeVosk::SmallEnglish),
            "en-us-0.22" => Ok(ModelTypeVosk::English),
            "small-cn-0.22" => Ok(ModelTypeVosk::SmallChinese),
            "cn-0.22" => Ok(ModelTypeVosk::Chinese),
            "small-ko-0.22" => Ok(ModelTypeVosk::SmallKorean),
            "small-fr-0.22" => Ok(ModelTypeVosk::SmallFrench),
            "fr-0.22" => Ok(ModelTypeVosk::French),
            "small-de-0.15" => Ok(ModelTypeVosk::SmallGerman),
            "de-0.21" => Ok(ModelTypeVosk::German),
            "small-ru-0.22" => Ok(ModelTypeVosk::SmallRussian),
            "ru-0.42" => Ok(ModelTypeVosk::Russian),
            "small-es-0.42" => Ok(ModelTypeVosk::SmallSpanish),
            "es-0.42" => Ok(ModelTypeVosk::Spanish),
            "small-pt-0.3" => Ok(ModelTypeVosk::SmallPortuguese),
            "small-tr-0.3" => Ok(ModelTypeVosk::SmallTurkish),
            "small-vn-0.4" => Ok(ModelTypeVosk::SmallVietnamese),
            "vn-0.4" => Ok(ModelTypeVosk::Vietnamese),
            "small-it-0.22" => Ok(ModelTypeVosk::SmallItalian),
            "it-0.22" => Ok(ModelTypeVosk::Italian),
            "small-nl-0.22" => Ok(ModelTypeVosk::SmallDutch),
            "small-ca-0.4" => Ok(ModelTypeVosk::SmallCatalan),
            "small-uk-v3-small" => Ok(ModelTypeVosk::SmallUkrainian),
            "uk-v3" => Ok(ModelTypeVosk::Ukrainian),
            "small-sv-rhasspy-0.15" => Ok(ModelTypeVosk::SmallSwedish),
            "small-hi-0.22" => Ok(ModelTypeVosk::SmallHindi),
            "hi-0.22" => Ok(ModelTypeVosk::Hindi),
            "small-cs-0.4-rhasspy" => Ok(ModelTypeVosk::SmallCzech),
            "small-pl-0.22" => Ok(ModelTypeVosk::SmallPolish),
            _ => Err(()),
        }
    }
}
